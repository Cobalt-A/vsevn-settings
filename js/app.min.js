/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
var __webpack_exports__ = {};
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

// // Import vendor jQuery plugin example
// import '~/app/libs/mmenu/dist/mmenu.js'
document.addEventListener('DOMContentLoaded', function () {
  inputStatus(); // clicks

  document.addEventListener('click', function (event) {
    if (event.target.closest('.email-confirmation')) {
      document.querySelector('.confirm-phone').classList.remove('hide');
      stopScroll();
    }

    if (event.target.closest('.chenge-phone')) {
      document.querySelector('.phone-chenge-error-popup').classList.remove('hide');
    }

    if (!event.target.closest('.chenge-phone')) {
      document.querySelector('.phone-chenge-error-popup').classList.add('hide');
    }

    if (!event.target.closest('.select-wrapper')) {
      document.querySelectorAll('.select-list').forEach(function (el) {
        el.classList.add('hide');
        el.parentElement.querySelector('.angle-up').classList.remove('hide');
        el.parentElement.querySelector('.angle-down').classList.add('hide');
      });
    }

    if (event.target.closest('.delete')) {
      document.querySelector('#email').value = '';
      document.querySelector('#email').classList.remove('input-active');
      document.querySelector('.error-message-top').classList.add('hide');
    }

    if (event.target.closest('.delete-telephone')) {
      document.querySelector('.delete-phone').classList.remove('hide');
      stopScroll();
    }

    if (event.target.closest('.delete-email')) {
      document.querySelector('.delete-email-window').classList.remove('hide');
      stopScroll();
    }

    if (event.target.closest('.clean-textarea')) {
      var textarea = event.target.closest('.clean-textarea').parentElement.parentElement.parentElement.querySelector('textarea');
      textarea.value = '';
      textarea.classList.remove('input-active');
      textarea.classList.remove('custom-input-active');
    }

    if (event.target.closest('.select-input') || event.target.closest('.select-wrapper svg') || event.target.closest('.select-wrapper label')) {
      var input = event.target.parentElement.parentElement.querySelector('input');
      document.querySelectorAll('.select-list').forEach(function (el) {
        if (input.parentElement.querySelector('.select-list') == el) return;
        el.classList.add('hide'); // for hide other lists
      });
      input.parentElement.querySelector('.select-list').classList.toggle('hide');
      input.parentElement.querySelector('.angle-up').classList.toggle('hide');
      input.parentElement.querySelector('.angle-down').classList.toggle('hide');
    }

    if (!event.target.closest('.auto-fill')) {
      document.querySelectorAll('.auto-fill').forEach(function (el) {
        el.classList.remove('hide');
      });
    }

    if (event.target.closest('.delete-lang')) {
      event.target.closest('.delete-lang').parentElement.parentElement.parentElement.parentElement.remove();
    }

    if (event.target.closest('.delete-company-phone')) {
      event.target.closest('.delete-company-phone').parentElement.parentElement.parentElement.remove();
    }

    if (event.target.closest('#company-mail-address') || event.target.closest('#address') || event.target.closest('#user-address')) {
      document.querySelector('#address-window').classList.remove('hide');
      stopScroll();
    }

    if (event.target.closest('[for="company-mail-address"]') || event.target.closest('[for="address"]') || event.target.closest('[for="user-address"]')) {
      document.querySelector('#address-window').classList.remove('hide');
      stopScroll();
    }

    if (event.target.closest('.create-tag')) {
      var _input = document.querySelector('#tag-create');

      if (!_input.value) return;
      var tag = "<div class=\"tag\"><a href=\"#\">".concat(_input.value, "</a><p class=\"icon\"><img src=\"images/dist/Forma 1.png\" alt=\"\"></p></div>");
      document.querySelector('.tags-wrapper').insertAdjacentHTML('beforeend', tag);
      document.querySelector('.tags-wrapper').lastElementChild.lastElementChild.addEventListener('click', function (event) {
        event.target.closest('.icon').parentElement.remove();
      });
    }

    if (event.target.closest('.add-new-leng')) {
      var n = document.querySelectorAll('.select-leng').length + 1;
      if (n > 5) return;
      var element = document.querySelector('#select-leng').parentElement.parentElement.parentElement.parentElement;
      var newEl = element.cloneNode(true);
      var container = newEl.querySelector('.add-new-leng').parentElement;
      var itemContainer = document.createElement('a');

      var _input2 = newEl.querySelector('input');

      var label = newEl.querySelector('label');
      newEl.classList.add('mt-20');
      newEl.querySelector('.add-new-leng').remove();
      itemContainer.classList.add('delete-lang');
      itemContainer.classList.add('icon');
      itemContainer.innerHTML = '<img src="images/dist/Forma 1 копия 15.png" alt="">';
      container.appendChild(itemContainer);
      label.htmlFor = "".concat(_input2.id, "-").concat(n);
      _input2.id = "".concat(_input2.id, "-").concat(n);
      _input2.name = _input2.id;
      _input2.value = '';

      _input2.classList.remove('custom-input-active');

      element.insertAdjacentElement('afterend', newEl);
    }

    if (event.target.closest('#add-company-phone')) {
      var _n = document.querySelectorAll('.company-phone').length + 1;

      if (_n > 5) return;
      var _element = event.target.parentElement.parentElement.parentElement;

      var _newEl = _element.cloneNode(true);

      var _container = _newEl.querySelector('#add-company-phone').parentElement;

      var _itemContainer = document.createElement('a');

      var _input3 = _newEl.querySelector('input');

      var _label = _newEl.querySelector('label');

      _newEl.querySelector('.add-new-element').remove();

      _itemContainer.classList.add('delete-company-phone');

      _itemContainer.classList.add('icon');

      _itemContainer.innerHTML = '<img src="images/dist/Forma 1 копия 15.png" alt="">';

      _container.appendChild(_itemContainer);

      _label.htmlFor = "".concat(_input3.id, "-").concat(_n);
      _input3.id = "".concat(_input3.id, "-").concat(_n);
      _input3.name = _input3.id;
      _input3.value = '';

      _input3.classList.remove('custom-input-active');

      _element.insertAdjacentElement('afterend', _newEl);
    }
  }); // inputs

  document.addEventListener('input', function (event) {
    inputStatus();

    if (event.target == document.querySelector('#email')) {
      document.querySelector('.error-message-top').classList.remove('hide');
      document.querySelector('.error-message-top').innerHTML = "<span>".concat(event.target.value, "</span><a href=\"#\" class=\"delete icon\"><img src=\"images/dist/Forma 1 \u043A\u043E\u043F\u0438\u044F 15.png\" alt=\"\"></a>");
      if (event.target.value == '') document.querySelector('.error-message-top').classList.add('hide');
      var value = event.target.value;
      var re = /^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i;

      if (!value.toLowerCase().match(re)) {
        event.target.parentElement.parentElement.parentElement.querySelector('.red-text').classList.remove('hide');
        event.target.classList.add('error-input');
      } else {
        event.target.parentElement.parentElement.parentElement.querySelector('.red-text').classList.add('hide');
        event.target.classList.remove('error-input');
      }
    }

    if (event.target == document.querySelector('#phone')) {
      var _value = event.target.value;
      var _re = /(?:\+|\d)[\d\-\(\) ]{9,}\d/g;

      if (!_value.toLowerCase().match(_re)) {
        event.target.parentElement.parentElement.parentElement.querySelector('.red-text').classList.remove('hide');
        event.target.classList.add('error-input');
      } else {
        event.target.parentElement.parentElement.parentElement.querySelector('.red-text').classList.add('hide');
        event.target.classList.remove('error-input');
      }
    }

    if (event.target.closest('[data-phone-pattern]')) {
      eventCalllback(event);
    }
  });
  document.querySelectorAll('[data-name-pattern]').forEach(function (el) {
    el.addEventListener('input', function (event) {
      el.value = el.value.replace(/( |^)[а-яёa-z]/g, function (x) {
        return x.toUpperCase();
      });
      var array = el.value.split(' ');
      var surname = array[0];
      var name = array[1];
      var patronymic = array[2];
      var stc = [surname, name, patronymic].join(' ');
      if (array.length > 3) el.value = stc;
    });
  });
  document.querySelectorAll('.modal-window, .modal-container, .modal-window .close img, .modal-window .red-btn').forEach(function (el) {
    el.addEventListener('click', function (event) {
      document.querySelectorAll('.modal-window').forEach(function (modal) {
        if (el != event.target) return;
        modal.classList.add('hide');
      });
      continueScroll();
    });
  });
  document.querySelectorAll('.tag .icon img').forEach(function (el) {
    el.addEventListener('click', function (event) {
      el.parentElement.parentElement.remove();
    });
  });
  document.querySelectorAll('.clean-input img').forEach(function (el) {
    el.addEventListener('click', function (event) {
      if (event.target.parentElement.parentElement.parentElement.parentElement.querySelector('input')) {
        var input = event.target.parentElement.parentElement.parentElement.parentElement.querySelector('input');
        input.value = '';
        input.classList.remove('input-active');
        input.classList.remove('custom-input-active');
      }
    });
  });
  document.querySelectorAll('.select-list li a').forEach(function (el) {
    el.addEventListener('click', function (event) {
      document.querySelectorAll('.select-list li').forEach(function (el) {
        el.classList.remove('active');
      });
      event.target.parentElement.parentElement.parentElement.parentElement.querySelector('.select-input').classList.remove('error-input');
      event.target.parentElement.parentElement.parentElement.parentElement.querySelector('.select-input').value = event.target.innerHTML;
      event.target.parentElement.parentElement.parentElement.parentElement.querySelector('.select-input').classList.add('custom-input-active');
      event.target.parentElement.classList.add('active');
    });
  });
  document.querySelectorAll('.action-container .expand img').forEach(function (el) {
    el.addEventListener('click', function (event) {
      var img = el.parentElement.parentElement.previousElementSibling;
      document.querySelector('.modal-img-wrapper .img-container').innerHTML = img.outerHTML;
      document.querySelector('.img-modal-window').classList.remove('hide');
      stopScroll();
    });
  });
  document.querySelectorAll('.expended-img').forEach(function (el) {
    el.addEventListener('click', function (event) {
      var img = el;
      document.querySelector('.modal-img-wrapper .img-container').innerHTML = img.outerHTML;
      document.querySelector('.img-modal-window').classList.remove('hide');
      stopScroll();
    });
  });

  document.getElementById('password-chenge').onsubmit = function (event) {
    console.log(1233);
    var form = event.target;
    form.querySelectorAll('.red-text').forEach(function (el) {
      el.classList.add('hide');
    });
    form.querySelectorAll('.error-input').forEach(function (el) {
      el.classList.remove('error-input');
    });

    if (form.password.value == '12345') {
      if (!form.new_password.value) {
        form.new_password.classList.add('error-input');
        form.new_password.parentElement.parentElement.querySelector('.red-text').classList.remove('hide');
        return false;
      }

      if (form.new_password.value == form.confirm_new_password.value) return true;
      form.confirm_new_password.classList.add('error-input');
      form.confirm_new_password.parentElement.parentElement.querySelector('.red-text').classList.remove('hide');
      return false;
    }

    form.password.classList.add('error-input');
    form.password.parentElement.parentElement.querySelector('.red-text').classList.remove('hide');
    return false;
  };

  document.getElementById('main-form').onsubmit = function (event) {
    var form = event.target;
    var invalid = false;
    form.querySelectorAll('.custom-input').forEach(function (el) {
      if (el.value != '' || el.hasAttribute('data-no-validation-input')) return;
      el.classList.add('custom-input-active');
      el.setAttribute('placeholder', 'ЗАПОЛНИТЕ ЭТО ПОЛЕ');
      el.classList.add('error-input');
      invalid = true;
    });
    form.querySelectorAll('.textarea').forEach(function (el) {
      if (el.value.length >= 250) return;
      el.classList.add('error-input');
      el.setAttribute('placeholder', 'ЗАПОЛНИТЕ ЭТО ПОЛЕ');
      el.parentElement.parentElement.querySelector('.textarea-error-message').classList.remove('hide');
      invalid = true;
    });
    form.querySelectorAll('.select-input').forEach(function (el) {
      if (el.value) return;
      el.classList.add('error-input');
      invalid = true;
    });
    form.querySelectorAll('.input-date').forEach(function (el) {
      if (el.value) return;
      el.classList.add('error-input');
      invalid = true;
    });
    form.querySelectorAll('[data-phone-pattern]').forEach(function (el) {
      if (el.value && el.value.length == 16) return;
      el.classList.add('error-input');
      invalid = true;
    });
    form.querySelectorAll('[data-name-pattern]').forEach(function (el) {
      if (el.value && el.value.split(' ').length == 3) return;
      el.classList.add('error-input');
      invalid = true;
    });

    if (invalid) {
      form.scrollIntoView({
        behavior: "smooth"
      });
      return false;
    }
  };

  function inputStatus() {
    document.querySelectorAll('.input-date').forEach(function (el) {
      el.value ? el.classList.add('input-active') : el.classList.remove('input-active');
    });
    document.querySelectorAll('input[type="text"]:not(.custom-input)').forEach(function (el) {
      el.value ? el.classList.add('input-active') : el.classList.remove('input-active');
      if (el.classList.contains('error-input') && el.value) el.classList.remove('error-input');
    });
    document.querySelectorAll('.custom-input').forEach(function (el) {
      el.value || el.getAttribute('placeholder') ? el.classList.add('custom-input-active') : el.classList.remove('custom-input-active');
      if (el.classList.contains('error-input') && el.value) el.classList.remove('error-input');
      if (el.value && el.hasAttribute('placeholder')) el.removeAttribute('placeholder');
    });
    document.querySelectorAll('.textarea').forEach(function (el) {
      el.value ? el.classList.add('input-active') : el.classList.remove('input-active');

      if (el.classList.contains('error-input') && el.value.length >= 250) {
        el.classList.remove('error-input');
        el.parentElement.parentElement.querySelector('.textarea-error-message').classList.add('hide');
      }
    });
    document.querySelectorAll('.custom-textarea').forEach(function (el) {
      el.value ? el.classList.add('custom-input-active') : el.classList.remove('custom-input-active');
      if (el.classList.contains('error-input') && el.value) el.classList.remove('error-input');
    });
  }

  function stopScroll() {
    document.body.style.overflow = 'hidden';
  }

  function continueScroll() {
    document.body.style.overflow = '';
  }

  var eventCalllback = function eventCalllback(e) {
    var el = e.target,
        clearVal = el.dataset.phoneClear,
        pattern = el.dataset.phonePattern,
        matrix_def = "+7 ___ ___-__-__",
        matrix = pattern ? pattern : matrix_def,
        i = 0,
        def = matrix.replace(/\D/g, ""),
        val = e.target.value.replace(/\D/g, "");

    if (clearVal !== 'false' && e.type === 'blur') {
      if (val.length < matrix.match(/([\_\d])/g).length) {
        return;
      }
    }

    if (def.length >= val.length) val = def;
    e.target.value = matrix.replace(/./g, function (a) {
      return /[_\d]/.test(a) && i < val.length ? val.charAt(i++) : i >= val.length ? "" : a;
    });
  };

  document.querySelector('#chek').addEventListener('input', function (event) {
    if (!event.target.checked) {
      document.querySelector('#company-mail-address').value = '';
      document.querySelector('#company-mail-address').classList.remove('.custom-input-active');
      return;
    }

    document.querySelector('#company-mail-address').value = document.querySelector('#address').value;
  });
  document.querySelectorAll('.auto-fill').forEach(function (el) {
    el.addEventListener('click', function (event) {
      el.parentElement.querySelector('input').value = el.firstElementChild.innerText;
      el.classList.remove('show');
      getPartys(el.firstElementChild.innerText).then(function (resp) {
        console.log(resp);
        if (!resp[0]) return;
        var opf = resp[0].data.opf["short"];
        var name = resp[0].data.name.full;
        var inn = resp[0].data.inn;
        var kpp = resp[0].data.kpp;
        var address = resp[0].data.address.unrestricted_value;
        var date = new Date(resp[0].data.state.registration_date);
        var day = date.getUTCDate();
        var mounth = date.getUTCMonth() + 1;
        var year = date.getUTCFullYear();
        document.querySelector('#opf').value = opf;
        document.querySelector('#opf').classList.add('custom-input-active');
        document.querySelector('#company-name').value = name;
        document.querySelector('#company-name').classList.add('custom-input-active');
        document.querySelector('#inn').value = inn;
        document.querySelector('#inn').classList.add('custom-input-active');
        document.querySelector('#kpp').value = kpp;
        document.querySelector('#kpp').classList.add('custom-input-active');
        document.querySelector('#address').value = address;
        document.querySelector('#address').classList.add('custom-input-active');
        document.querySelector('#company-create-date').value = "".concat(day, ".").concat(mounth, ".").concat(year);
        document.querySelector('#company-create-date').classList.add('custom-input-active');
      });
    });
  });
  document.querySelector('#company-name').addEventListener('input', function (event) {
    var input = event.target;
    var prompt = input.parentElement.querySelector('.prompt');
    getPartys(event.target.value).then(function (resp) {
      document.querySelectorAll('.auto-fill').forEach(function (el) {
        el.classList.remove('show');
      });
      if (!resp[0]) return;
      prompt.classList.add('show');
      prompt.firstElementChild.innerText = '';
      prompt.firstElementChild.innerText = resp[0].data.name.short_with_opf;
    });
  });
  document.querySelector('#inn').addEventListener('input', function (event) {
    var input = event.target;
    var prompt = input.parentElement.querySelector('.prompt');

    if (event.target.value.length >= 10) {
      event.target.value = event.target.value.substr(0, 10);
    }

    getPartys(event.target.value).then(function (resp) {
      document.querySelectorAll('.auto-fill').forEach(function (el) {
        el.classList.remove('show');
      });
      if (!resp[0]) return;
      prompt.classList.add('show');
      prompt.firstElementChild.innerText = '';
      prompt.firstElementChild.innerText = resp[0].data.inn;
    });
  });
  document.querySelector('#kpp').addEventListener('input', function (event) {
    var input = event.target;
    var prompt = input.parentElement.querySelector('.prompt');

    if (event.target.value.length >= 9) {
      event.target.value = event.target.value.substr(0, 9);
    }

    getPartys(event.target.value).then(function (resp) {
      document.querySelectorAll('.auto-fill').forEach(function (el) {
        el.classList.remove('show');
      });
      if (!resp[0]) return;
      prompt.classList.add('show');
      prompt.firstElementChild.innerText = '';
      prompt.firstElementChild.innerText = resp[0].data.kpp;
    });
  });

  function getCompany(_x) {
    return _getCompany.apply(this, arguments);
  }

  function _getCompany() {
    _getCompany = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(inn) {
      var url, token, options, request, response, json;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              url = "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party";
              token = "083c1989aecfcf9c63d50fdfc151fa4e41c0c5e4";
              options = {
                method: "POST",
                mode: "cors",
                headers: {
                  "Content-Type": "application/json",
                  "Accept": "application/json",
                  "Authorization": "Token " + token
                },
                body: JSON.stringify({
                  query: inn
                })
              };
              _context.next = 5;
              return fetch(url, options);

            case 5:
              request = _context.sent;
              _context.next = 8;
              return request.rext();

            case 8:
              response = _context.sent;
              _context.next = 11;
              return JSON.parse(response);

            case 11:
              json = _context.sent;
              return _context.abrupt("return", json.suggestions);

            case 13:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));
    return _getCompany.apply(this, arguments);
  }

  function getPartys(_x2) {
    return _getPartys.apply(this, arguments);
  }

  function _getPartys() {
    _getPartys = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(query) {
      var url, token, options, request, response, json;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              url = 'https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party';
              token = "083c1989aecfcf9c63d50fdfc151fa4e41c0c5e4";
              options = {
                method: "POST",
                mode: "cors",
                headers: {
                  "Content-Type": "application/json",
                  "Accept": "application/json",
                  "Authorization": "Token " + token
                },
                body: JSON.stringify({
                  query: query,
                  count: 1
                })
              };
              _context2.next = 5;
              return fetch(url, options);

            case 5:
              request = _context2.sent;
              _context2.next = 8;
              return request.text();

            case 8:
              response = _context2.sent;
              _context2.next = 11;
              return JSON.parse(response);

            case 11:
              json = _context2.sent;
              return _context2.abrupt("return", json.suggestions);

            case 13:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));
    return _getPartys.apply(this, arguments);
  }
});
/******/ })()
;